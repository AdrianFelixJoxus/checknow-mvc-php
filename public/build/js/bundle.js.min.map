{"version":3,"sources":["botones.js","registros.js"],"names":["botonEntrada","document","createElement","botonDesayuno","botonEntradaDesayuno","botonComida","botonEntradaComida","botonSalida","dashboardBotones","querySelector","console","log","textContent","classList","add","id","appendChild","fechaFormato","fecha","Date","fechaYear","getFullYear","FechaMes","getMonth","fechaDay","getUTCDate","obtenerFecha","horaFormato","hora","horaHour","getHours","horaMinutes","getMinutes","obtenerHora","addEventListener","e","target","async","datos","FormData","append","respuesta","fetch","method","body","json","resultado","Swal","fire","then","location","href","title","text","icon","confirmButtonText","ChecarEntrada","ChecarComida","ChecarComidaEntrada","ChecarSalida","ChecarDesayuno","ChecarDesayunoEntrada","inputFecha","tableBody","limpiarRegistros","firstChild","removeChild","value","registros","tbody","forEach","registro","usuarios","usuario","tr","tdNombre","nombre","apellido","tdHora","tdComida","comida","horaSalida","horaEntrada","tdSalida","salida","mostrarRegistros","noResultados","filtrarRegistros"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\n(function() {\r\n    \r\n    \r\n    const botonEntrada = document.createElement(\"BUTTON\");\r\n    const botonDesayuno = document.createElement(\"BUTTON\");\r\n    const botonEntradaDesayuno = document.createElement(\"BUTTON\");\r\n    const botonComida = document.createElement(\"BUTTON\");\r\n    const botonEntradaComida = document.createElement(\"BUTTON\");\r\n    const botonSalida = document.createElement(\"BUTTON\");\r\n\r\n    //const usuarioHidden = document.querySelector(\"#usuarioId\");\r\n    \r\n\r\n    const dashboardBotones = document.querySelector(\".dashboard-botones\");\r\n    console.log(dashboardBotones);\r\n    if(dashboardBotones) {\r\n\r\n        botonEntrada.textContent = \"Entrada\";\r\n        botonEntrada.classList.add(\"dashboard-botones__boton\");\r\n        botonEntrada.id = 1;\r\n\r\n        botonDesayuno.textContent = \"Desayuno\";\r\n        botonDesayuno.classList.add(\"dashboard-botones__boton\");\r\n        botonDesayuno.id = 5;\r\n\r\n        botonEntradaDesayuno.textContent = \"Entrada Desayuno\";\r\n        botonEntradaDesayuno.classList.add(\"dashboard-botones__boton\");\r\n        botonEntradaDesayuno.id = 6;\r\n\r\n        botonComida.textContent = \"Comida\";\r\n        botonComida.classList.add(\"dashboard-botones__boton\");\r\n        botonComida.id = 2;\r\n\r\n        botonEntradaComida.textContent = \"Entrada Comida\";\r\n        botonEntradaComida.classList.add(\"dashboard-botones__boton\");\r\n        botonEntradaComida.id = 3;\r\n\r\n        botonSalida.textContent = \"Salida\";\r\n        botonSalida.classList.add(\"dashboard-botones__boton\");\r\n        botonSalida.id = 4;\r\n\r\n        dashboardBotones.appendChild(botonEntrada);\r\n        dashboardBotones.appendChild(botonDesayuno);\r\n        dashboardBotones.appendChild(botonEntradaDesayuno);\r\n        dashboardBotones.appendChild(botonComida);\r\n        dashboardBotones.appendChild(botonEntradaComida);\r\n        dashboardBotones.appendChild(botonSalida);\r\n\r\n        const fechaFormato = obtenerFecha();\r\n        const horaFormato = obtenerHora();\r\n\r\n        dashboardBotones.addEventListener(\"click\", function(e) {\r\n            if(e.target.id === \"1\") {\r\n              \r\n                ChecarEntrada(fechaFormato, horaFormato);\r\n            }\r\n            if(e.target.id === \"2\") {\r\n                \r\n                ChecarComida(fechaFormato, horaFormato);\r\n            }\r\n            if(e.target.id === \"3\") {\r\n                \r\n                ChecarComidaEntrada(fechaFormato, horaFormato);\r\n            }\r\n            if(e.target.id === \"4\") {\r\n                \r\n                ChecarSalida(fechaFormato, horaFormato);\r\n            }\r\n            if(e.target.id === \"5\") {\r\n                \r\n                ChecarDesayuno(fechaFormato, horaFormato);\r\n            }\r\n            if(e.target.id === \"6\") {\r\n                \r\n                ChecarDesayunoEntrada(fechaFormato, horaFormato);\r\n            }\r\n        });\r\n\r\n        async function ChecarEntrada(fecha, hora) {\r\n            // Objeto form data\r\n            const datos = new FormData();\r\n            //datos.append(\"usuarioId\", usuarioHidden.value);\r\n            datos.append(\"fecha\", fecha);\r\n            datos.append(\"hora\", hora);\r\n\r\n            const url = \"/api/entrada\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json()\r\n            \r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    \"Registro Exitoso\",\r\n                    \"Tu Entrada Ha sido Registrada\",\r\n                    \"success\"\r\n                ).then( () => location.href = \"/logout\");\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Hubo un error\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n        async function ChecarDesayuno(fecha, hora) {\r\n            // Objeto form data\r\n            const datos = new FormData();\r\n            //datos.append(\"usuarioId\", usuarioHidden.value);\r\n            datos.append(\"fecha\", fecha);\r\n            datos.append(\"horaSalida\", hora);\r\n\r\n            const url = \"/api/desayuno\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json()\r\n            \r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    \"Registro Exitoso\",\r\n                    \"Tu Salida Ha sido Registrada\",\r\n                    \"success\"\r\n                ).then( () => location.href = \"/logout\");\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Hubo un error\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n        async function ChecarDesayunoEntrada(fecha, hora) {\r\n            // Objeto form data\r\n            const datos = new FormData();\r\n            //datos.append(\"usuarioId\", usuarioHidden.value);\r\n            datos.append(\"fecha\", fecha);\r\n            datos.append(\"horaEntrada\", hora);\r\n\r\n            const url = \"/api/desayunoEntrada\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json()\r\n            \r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    \"Registro Exitoso\",\r\n                    \"Tu Entrada Ha sido Registrada\",\r\n                    \"success\"\r\n                ).then( () => location.href = \"/logout\");\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Hubo un error\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                })\r\n            }\r\n            \r\n        }\r\n    \r\n\r\n    async function ChecarComida(fecha, hora) {\r\n            // Objeto form data\r\n            const datos = new FormData();\r\n            //datos.append(\"usuarioId\", usuarioHidden.value);\r\n            datos.append(\"fecha\", fecha);\r\n            datos.append(\"horaSalida\", hora);\r\n\r\n            const url = \"/api/comida\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n            \r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    \"Registro Exitoso\",\r\n                    \"Tu Salida Ha sido Registrada\",\r\n                    \"success\"\r\n                ).then( () => location.href = \"/logout\");\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Hubo un error\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                });\r\n            }\r\n        \r\n        }\r\n\r\n        async function ChecarComidaEntrada(fecha, hora) {\r\n            // Objeto form data\r\n            const datos = new FormData();\r\n            //datos.append(\"usuarioId\", usuarioHidden.value);\r\n            datos.append(\"fecha\", fecha);\r\n            datos.append(\"horaEntrada\", hora);\r\n\r\n            const url = \"/api/comidaEntrada\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n            \r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    \"Registro Exitoso\",\r\n                    \"Tu Entrada Ha sido Registrada\",\r\n                    \"success\"\r\n                ).then( () => location.href = \"/logout\");\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Hubo un error\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                });\r\n            }\r\n        \r\n        }\r\n\r\n        async function ChecarSalida(fecha, hora) {\r\n            // Objeto form data\r\n            const datos = new FormData();\r\n            //datos.append(\"usuarioId\", usuarioHidden.value);\r\n            datos.append(\"fecha\", fecha);\r\n            datos.append(\"horaSalida\", hora);\r\n\r\n            const url = \"/api/salida\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n            \r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    \"Registro Exitoso\",\r\n                    \"Tu Salida Ha sido Registrada\",\r\n                    \"success\"\r\n                ).then( () => location.href = \"/logout\");\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"Hubo un error\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                });\r\n            }\r\n        \r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    function obtenerFecha() {\r\n        const fecha = new Date();\r\n        const fechaYear = fecha.getFullYear();\r\n        const FechaMes = fecha.getMonth() + 1;\r\n        const fechaDay = fecha.getUTCDate();\r\n        const fechaFormato = `${fechaYear}-${FechaMes}-${fechaDay}`;\r\n\r\n        return fechaFormato;\r\n    }\r\n\r\n    function obtenerHora() {\r\n        const hora = new Date()\r\n        const horaHour = hora.getHours();\r\n        const horaMinutes = hora.getMinutes();\r\n        const horaFormato = `${horaHour}:${horaMinutes}:00`;\r\n\r\n        return horaFormato;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n})();","(function () {\r\n    const inputFecha = document.querySelector(\"#fecha\");\r\n    \r\n    \r\n\r\n    if(inputFecha) {\r\n        const tableBody = document.querySelector(\".table__tbody\");\r\n        inputFecha.addEventListener(\"input\", seleccionarFecha);\r\n\r\n        function seleccionarFecha(e) {\r\n            if(e.target.value) {\r\n                filtrarRegistros(e.target.value);\r\n            }\r\n        }\r\n\r\n        async function filtrarRegistros(fecha) {\r\n            const datos = new FormData();\r\n            datos.append(\"fecha\", fecha);\r\n            const url = \"/api/fecha\";\r\n            const respuesta = await fetch(url, {\r\n                method: \"post\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            console.log(resultado);\r\n            if(resultado.resultado !== false) {\r\n                mostrarRegistros(resultado);\r\n            } else {\r\n                limpiarRegistros();\r\n                const noResultados = document.createElement(\"P\");\r\n                noResultados.classList.add(\"dashboard__heading\");\r\n                noResultados.textContent = \"No hay resultados para tu busqueda\";\r\n                tableBody.appendChild(noResultados);\r\n                \r\n            }\r\n            \r\n\r\n        }\r\n\r\n        function mostrarRegistros(registros) {\r\n            limpiarRegistros();\r\n            const tbody = document.querySelector(\".table__tbody\");\r\n            registros.forEach(registro => {\r\n                \r\n\r\n                registro.usuarios.forEach(usuario => {\r\n                    const tr = document.createElement(\"TR\");\r\n                    tr.classList.add(\"table__tr\");\r\n\r\n                    const tdNombre = document.createElement(\"TD\");\r\n                    tdNombre.classList.add(\"table__td\");\r\n\r\n                    const {nombre, apellido} = usuario.usuario\r\n                    tdNombre.textContent = `${nombre} ${apellido}`;\r\n                    tr.appendChild(tdNombre);\r\n\r\n                    const tdHora = document.createElement(\"TD\");\r\n                    tdHora.classList.add(\"table__td\");\r\n                    if(usuario.hora) {\r\n                        tdHora.textContent = usuario.hora;\r\n                        tr.appendChild(tdHora);\r\n                    } else {\r\n                        tdHora.textContent = \"Hora de asistencia No registrada\";\r\n                        tr.appendChild(tdHora);\r\n                    }\r\n                    \r\n\r\n                    const tdComida = document.createElement(\"TD\");\r\n                    tdComida.classList.add(\"table__td\");\r\n                    if(usuario.comida) {\r\n                        const {horaSalida, horaEntrada} = usuario.comida;\r\n                        tdComida.textContent = `${horaSalida} - ${horaEntrada}`;\r\n                        tr.appendChild(tdComida);\r\n                    } else {\r\n                        tdComida.textContent = `No registrada`;\r\n                        tr.appendChild(tdComida);\r\n                    }\r\n\r\n                    // const tdDiferiencia = document.createElement(\"TD\");\r\n                    // tdDiferiencia.classList.add(\"table__td\");\r\n                    // if(usuario.diferiencia) {\r\n                    //     tdDiferiencia.textContent = usuario.diferiencia;\r\n                    //     tr.appendChild(tdDiferiencia);\r\n                    // } else {\r\n                    //     tdDiferiencia.textContent = `No registrada`;\r\n                    //     tr.appendChild(tdDiferiencia);\r\n                    // }\r\n                    \r\n\r\n                    const tdSalida = document.createElement(\"TD\");\r\n                    tdSalida.classList.add(\"table__td\");\r\n                    if(usuario.salida) {\r\n                        tdSalida.textContent = `${usuario.salida.horaSalida}`;\r\n                        tr.appendChild(tdSalida);\r\n                    } else {\r\n                        tdSalida.textContent = \"No registrada\";\r\n                        tr.appendChild(tdSalida);\r\n                    }\r\n\r\n                    tbody.appendChild(tr);\r\n\r\n                });\r\n\r\n                \r\n            });\r\n\r\n        }\r\n\r\n        function limpiarRegistros() {\r\n            while(tableBody.firstChild) {\r\n                tableBody.removeChild(tableBody.firstChild);\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n})();"]}